数组 一般指数组对象 ；在不至于引起混淆
的情况下，也可能指数组类 ；在其他情况下，会明确指出是数组类
还是数组对象 。如果数组的元素是基本类型，就把它叫作基本类型
数组 ，否则，数组的元素是引用类型，把它叫作引用类型数组 。基
本类型数组肯定都是一维数组 ，如果引用类型数组的元素也是数
组，那么它就是多维数组 。

数组在Java虚拟机中是个比较特殊的概念。为什么这么说呢？
有下面几个原因：
首先，数组类和普通的类是不同的。普通的类从class文件中加
载，但是数组类由Java虚拟机在运行时生成。数组的类名是左方括
号（[）+数组元素的类型描述符；数组的类型描述符就是类名本身。
例如，int[]的类名是[I，int[][]的类名是[[I，Object[]的类名是
[Ljava/lang/Object；，String[][]的类名是[[java/lang/String；，等等。
其次，创建数组的方式和创建普通对象的方式不同。普通对象
由new指令创建，然后由构造函数初始化。基本类型数组由newarray
指令创建；引用类型数组由anewarray指令创建；另外还有一个专门
的multianewarray指令用于创建多维数组。
最后，很显然，数组和普通对象存放的数据也是不同的。普通
对象中存放的是实例变量，通过putfield和getfield指令存取。数组对
象中存放的则是数组元素，通过<t>aload和<t>astore系列指令按索
引存取。其中<t>可以是a、b、c、d、f、i、l或者s，分别用于存取引用、
byte、char、double、float、int、long或short类型的数组。另外，还有一
个arraylength指令，用于获取数组长度。

和普通对象一样，数组也是分配在堆中的，通过引用来使用。
所以需要改造Object结构体，让它既可以表示普通的对象，也可以
表示数组。

·数组可以强制转换成Object类型（因为数组的超类是Object）。
·数组可以强制转换成Cloneable和Serializable类型（因为数组实
现了这两个接口）。
·如果下面两个条件之一成立，类型为[]SC的数组可以强制转
换成类型为[]TC的数组：
·TC和SC是同一个基本类型。
·TC和SC都是引用类型，且SC可以强制转换成TC。