我们已经知道，要想运行Java程序，除了Java虚拟机之外，还需要Java类
库的配合。Java虚拟机和Java类库一起构成了Java运行时环境。Java
类库主要用Java语言编写，一些无法用Java语言实现的方法则使用
本地语言编写，这些方法叫作本地方法。

OpenJDK类库中的本地方法是用JNI（Java Native Interface）
编写的，但是要让虚拟机支持JNI规范还需要做大量的工作。由于
本书的主要目的是介绍Java虚拟机的工作原理，为了不陷入JNI规
范的细节之中，将使用Go语言来实现这些方法。

在Java中，类也表现为普通的对象，它的类是java.lang.Class。听
起来有点像鸡生蛋还是蛋生鸡的问题：类也是对象，而对象又是类
的实例。那么在Java虚拟机内部，究竟是先有类还是先有对象呢？

如前所述，Java有强大的反射能力。可以在运行期间获取类的
各种信息、存取静态和实例变量、调用方法，等等。要想运用这种
能力，获取类对象 [1] 是第一步。在Java语言中，有两种方式可以获
得类对象引用：使用类字面值和调用对象的getClass（）方法。

自动装箱与拆箱
为了更好地融入Java的对象系统，每种基本类型
都有一个包装类与之对应。从Java 5开始，Java语法增加了自动装箱
和拆箱（autoboxing/unboxing）能力，可以在必要时把基本类型转换
成包装类型或者反之。这个增强完全是由编译器完成的，Java虚拟
机没有做任何调整。
